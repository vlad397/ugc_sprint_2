# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7','3.8', '3.9', '3.10']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-html mypy bandit isort black
      - name: Run black
        run: |
          black ugc_api --check --line-length 120
          black etl --check --line-length 120
      - name: Run isort
        run: |
          isort ugc_api --check-only --profile black --line-length 120
          isort etl --check-only --profile black  --line-length 120
      - name: Run flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ugc_api --count --select=E9,F63,F7,F82 --show-source --statistics --format=html --htmldir=.api-flake-report
          flake8 etl --count --select=E9,F63,F7,F82 --show-source --statistics --format=html --htmldir=.etl-flake-report
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 ugc_api --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --format=html --htmldir=.api-count-flake-report
          flake8 etl --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --format=html --htmldir=.etl-count-flake-report
      - name: Run bandit
        run: |
          bandit ugc_api
          bandit etl
      - name: Run mypy
        run: |
          yes | mypy ugc_api --install-types --ignore-missing-imports || true
          yes | mypy etl --install-types --ignore-missing-imports || true 
          mypy --ignore-missing-imports ugc_api/
          mypy --ignore-missing-imports etl/

  build:
    name: Build app
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Build the docker-compose stack
        run: docker-compose up -d
      
      - name: Sleep
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'

      - name: Check running containers
        run: docker ps -a
    
  send-telegram-message:
    name: Send telegram message
    runs-on: ubuntu-latest
    needs: [code-quality, build]
    steps:
      - name: send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Action is successful
              
            See changes: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            PR number ${{ github.event.pull_request.number }}
            Message ${{ github.event.head_commit.message }}
      
